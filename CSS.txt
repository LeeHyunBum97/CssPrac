오페라 브라우저가 HTML5와 CSS3를 가장 잘 지원한다.

HTML문서에 시각적인 효과를 부여하기 위한 언어인 CSS 작성방법
CSS적용 방식은 3가지로 외부 문석 작성, 내부 문서에 별도 영역에 작성, 가가 태그안에 직접 적용 하는 것이 있으며
그중 외부에 별도로 작성하는 것을 가장 권장한다, 태그안에 적용하는 것은 매우 지양

<속도나 가독성의 중요성 혹은 사용되는 빈도에 따라 바꿔서 적용한다.>
1. 별도의 파일에 작성하고 가져와서 사용
2. HTML 문서안에 <style></style>영역을 만들어 작성
3. 적용할 태그에서 style속성을 이용해 작성

실행방식 
HTML 코드나 JS코드를 전부 읽어 구조를 만든 이후에 적용한다, 스타일 시트는 작성 위치에 상관없이 동작한다

기본 선택자
1. * : 전체요소
2. tag이름 : 
3. .class이름 : 여러 요소를 그룹화하기 위해서 사용하고 대부분 스타일 적용에 사용된다.
4. #id : 문서 내에서 구별하기 위해서 사용되며, 대부분 JS에서 사용된다.

속성 선택자

<속성 이름 일치>
선택자[속성이름]: 선택자 안에 속성이 존재하는 경우만 적용
<a href="https://wwww.kakao.com>카카오</a>
<a>카카오</a>
위와 같을 때 a[href] : {}는 a태그의 href 속성을 가진 태그에만 style적용

<전체 일치>
선택자[속성이름="값"]:{}의 형식에는 해당 선택자의 속성을 가지고 값 또한 일치하는 것에만 style적용

<부분일치>
선택자[속성이름^="값"] : {}에서는 속성 값이 해당 값으로 시작하는 경우에만 적용
선택자[속성이름$="값"] : {}에서는 속성 값이 해당 값으로 끝나는 경우에만 적용
선택자[속성이름*="값"] : {}에서는 속성 값이 해당 값으로 포함되는 경우에 모두 적용

<복합선택자>
1. 일치 선택자 : 선택자1선택자2선택자3....
                공백없이 여러 선택자를 나열하면 모든 선택자가 일치해야 한다.
                div.content{} -> div 태그 중 class속성이 content인 경우에 적용

2. 자식 선택자 : 선택자1 > 선택자2
                선택자1에 포함된 선택자2인데 선택자2가 바로 아래 래벨에 있어야 한다.
                <div><span></span></div>
                <div><ul><span></span></ul></div>
                위 두줄의 태그 예시에서 div > span과 같은 형태로 Css를 적용시키면 위의 경우에만 적용되는 형태

3. 하위 선택자 : 선택자1 선택자2 선택자3 
                공백을 이용해 선택자를 나열하는 것으로 선택자2가 선택자1에 포함되어 있으면 적용
                div span 으로 작성하면 
                <div><span></span></div>
                <div><ul><span></span></ul></div>의 예시가 있을 때 포함하는 레벨에 상관없이 모두에게 적용된다.

4. 인접 형제 선택자 : 선택자1 + 선택자2 
                     선택자1과 동일한 레벨에서 다음에 나오는 선택자2에 적용한다.
                     <h1>대제목</h1>
                     <h2>제목1</h2>
                     <h2>제목2</h2>
                     에서 h1 + h2로 선택자를 설정한 경우 제목1에만 Style이 적용되는 것(제목2는 h2다음에 오는 것으로 해당X)

5. 형제 선택자 : 선택자1 ~ 선택자2
                 h1 ~ h2와 같을 때 h1과 동등한 레벨에 있는 모든 h2에 적용(들여쓰기 레벨 기준)
                 많이 사용되지는 않는다.
                 큰 제목 옆에 연달아 나오는 작은 제목을 강조하는 경우 정도에만 사용

6. 그룹 선택자 : ,로 구분
                ,와 나열을 하게 되면 나열된 선택자 중에 포함되면 Style이 적용된다.

선택자를 사용하는 방법은 다양하나 본인이 익숙한 것을 먼저 사용해서 수정하고 작업하는 것으로 일단 먼저 구현해라
내가 FE개발을 할 것은 아니나 결과물을 도출하기 때문

<의사 선택자>_아이디나 태그 이름 뒤에 온다
1. pseudo-classes selector : 선택자 뒤에 :을 하고 작성
                             link를 기준으로 다음과 같은 경우가 있음link, visited
                             예시로, a:link 와 같은 경우 모든 link에 Style을 적용
                             a:visited는 link에 한 번이라도 누는 경우 적용한다.

                             동작을 기준으로
                             hover : 마우스가 올라오면(유튜브 미리보기), active(입력이 감지 되었을 때), focus(input에 포커스 될 때)

                             UI요소를 기준으로 checked, enable, disabled

<구조 관련 선택자> _ 아이디와 태그이름 뒤에 사용하게 되면 찾아만 보기
root
first-child, last-child
nth-last-child
nth-child(n)
only-child
not(선택자)
empty
first-line, first-letter
nth-of-type(n), first-of-type(n), last-of-type(n), only-of-type(n)

<언어 기준 선택자> _ 아이디와 태그이름 뒤에 온다
lang(languagecode): 특정언어 설정에만 style을 적용
                    언어코드 2자리-국가코드 2자리 -> ko-KR, en-US ....

<의사 요소 선택자>
pseudo-element
::first-letter
::first-line
::before
::after
::selection

<스타일 상속>
하위 요소가 상위 요소의 값을 물려받는지 여부
속성별로 다르게 적용되는데 폰트 관련된 속성은 대부분 상속된다.
어떤 속성이 상속되지 않는 경우 상속을 받고자 하면 inherit으로 값을 설정하면 된다.

<스타일 적용 우선순위>
하나의 요소에 동일한 속성의 값을 2개 이상 적용하는 경우 충돌이 발생한다.
마지막에 적용된 요소가 우선순위를 갖게 된다.
태그 안에서 작성된 Style이 우선 순위가 가장 높다.
외부 파일과 작성한 것과 <style></style>태그를 문서안에 따로 작성한 것은 나중에 작성된 것이 우선순위가 더 높다
동일한 방식으로 작성된 경우에 특정도를 가지고 우선순위를 결정한다.
-> inline(태그안에) : 특정도 1000, id선택자 : 특정도 100, .class선택자 : 특정도10, 가상 클래스 : 특정도 10, 가상요소 : 특정도 1, 태그 선택자 : 특정도 1

<스타일 단위>
1. 절대 단위 : 불변의 단위
-cm
-mm
-in
-px : 픽셀로 1/96인치로 해상도 같은 것을 표현할 때 사용되는 단위 -> 1920*1024라면 가로로 점을 1920, 세로로 1024개 출력할 수 있다는 의미
      화면의 확대 축소에 따라 변할 수 있기 때문에 상대 단위라고 하기도 한다.
-pt : 1/72인치
-pc : 12pt

2. 상대 단위 : 화면의 크기나 디바이스 크기에 따라 다르게 적용
-px
-%
-em : font-size가 기준으로 글꼴 크기가 16px라면 1em은 16px 즉 글꼴 사이즈가 해당 단위의 기준, rem은 최상위 요소의 글꼴 크기
      주변의 글자 보다 크기가 1.5배가 되게 만들려면 1.5em과 같이 적용한다.
-vw(화면의 가로 크기를 100으로 설정), vh(화면의 세로 크기를 100으로), vmin(가로나 세로중 더 적은 것을 100으로), vmax(둘 중 더 큰 것을 100으로)
-ex : 소문자 x의 높이로 em의 절반에 해당
-ch : 숫자 0의 넓이

P.S 각도를 설정하는 단위
- deg, rad(라디안)

@ 요즘 디바이스 크기가 다양하기 때문에 화면 출력시 상대단위를 사용하는 것을 권장하고 규격이 정해진 인쇄용을 만들 때는 절대 단위를 사용한다.
@ 크기에 대한 단위로는 em이 가장 많이 사용되고 있다.

<Typography_문자나 기호에 Style을 적용하는 것>
1. font-family
   font-family: 폰트 나열과 같은 형식으로 적용하며 첫 번째 폰트가 없을 때 뒤의 폰트를 적용하기 위해서 나열하는 것
   font-family: 돋움 일때, 돋움이 없다면 그냥 window기본 폰트가 적용된다.
   그렇기 때문에 font-family: 돋움, sans-serif와 같이 돋움이 없는 경우 sans-serif의 글꼴이 적용되도록 하는 것이 보다 바람직하다.

2. @font-face : [@font-face: 글꼴]과 같이 사용하면 해당 글꼴이 없는 경우 다운로드 까지 받게 해준다.
                @font-face{
                    font-family: 글꼴이름
                    src:url(글꼴파일의 경로) format(파일유형)
                }
                과 같이 선언하면 해당 글꼴이 없는 경우 설정된 url에서 지정된 포맷으로 글꼴을 받아와서 적용시킨다.
                주의할 점은 아무 글꼴이나 사용하면 고소장 날라온당, 오픈된 것만 사용하는 것이 안전
                P.S 네이버 기사 같으거 긁어오면 돈줘야됨

3. font-size : 글꼴 크기로 키워드(xx-samll, x-small, small, medium, large, x-large, xx-large, smaller, lager..)로 설정할 수 있고 
               직접 단위 설정이 가능하나 em단위로 설정하는 것을 권장한다.

4. font-weight : 글자의 두께를 설정하는 것으로 100부터 900까지 단위로도 설정가능하며,
                 normal, bold, bolder, lighter와 같은 키워드로도 설정이 가능하다.

5. font-style : italic(글자 기울임)

6. font-variant : small-caps로 설정하면 소문자를 작은 대문자로 변형

7. font : 앞의 여섯가지를 한번에 적용하기 위해서 사용
          font: weight style variant size line-height, font-family와 같이 적용
          P.S font-family가 마지막에 오는 이유는 나열할 수 있기 때문에, 모든 나열 가능한 요소가 대체로 이렇다.
          다른 모든 속성은 모두 생략 가능하지만 font-size와 font-family는 생략이 불가능하다.

8. color : 요소의 전경 색상 적용이라 하나 대부분 글자에만 적용된다.
           색을 의미하는 키워드로 설정할 수 있고, 16진수 6자리, rgb(0~255)의 숫자 3개 나열혹은 백분율 3개 나열
           rgba를 사용하면 투명도도 설정 가능하고 hsl도 이에 해당된다.
           색상 키워드는 https://www.learningwebdesign.com/colornames.html
           색상 추출은 https://webfx.com/web-design/color-picker/에서 할 수 있으나 VSC에서는 색상 추출 기능을 코드 센스로 제공한다.

9. text-decoration : 밑줄이나 취소선 등의 효과를 설정한다
                     none, underline, overline, line-through, blink 등으로 설정
                     a 태그를 이용하면 자동으로 밑줄이 생기는데 이에 none을 적용해 없애는 경우가 있음
                     또한 요즘은 a태그 밑줄 보다는 색이나 두께를 변경해서 알려주는 것을 권장하고
                     일반 텍스트 강조시 underline을 설정하지 않고 italic으로 기울임 설정하는 것을 권장하고 있다.

10. text-tranceform : 영문의 대소문자를 변환하도록 설정한다
                      none, uppercase, lowercase, capitalize(첫글자만 전환)등의 키워드를 이용한다,

11. white-space : 공백문자를 설정한다
                  normal : 여러개의 공백을 하나로 처리한다.
                  nowrap : 여러 공백을 하나로 처리하고 영역넓이를 넘어가면 줄 바꿈하지 않고 한줄에 표시
                  pre : 여러 공백을 그대로 처리하고 영역넓이를 넘어가면 줄 바꿈하지 않고 한줄에 표시
                  pre-wrap : 여러 공백을 그대로 처리하고 영역넓이를 넘어가면 줄 바꿈해서 표시
                  pre-line : 여러 공백을 하나로 처리하고 영역 넓이를 넘어가면 줄 바꿈해서 표시